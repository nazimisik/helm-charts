{{- define "deployment.processor.transform.add_resource_attributes" -}}
otelcol.processor.transform "add_resource_attributes_as_metric_attributes" {
  // https://grafana.com/docs/agent/latest/flow/reference/components/otelcol.processor.transform/
  error_mode = "ignore"

  metric_statements {
    context    = "datapoint"
    statements = [
      "set(attributes[\"deployment.environment\"], resource.attributes[\"deployment.environment\"])",
      "set(attributes[\"service.version\"], resource.attributes[\"service.version\"])",
    ]
  }

  output {
    metrics = [otelcol.processor.batch.default.input]
  }
}

{{ end }}

{{- define "deployment.processor.transform.add_k8s_attributes" -}}
otelcol.processor.transform "add_k8s_attributes" {
  // https://grafana.com/docs/agent/latest/flow/reference/components/otelcol.processor.transform/
  // Grafana Cloud Kubernetes monitoring expects Loki labels `cluster`, `pod`, and `namespace`
  error_mode = "ignore"

  log_statements {
    context    = "resource"
    statements = [
      "set(attributes[\"pod\"], attributes[\"k8s.pod.name\"])",
      "set(attributes[\"namespace\"], attributes[\"k8s.namespace.name\"])",
      "set(attributes[\"loki.resource.labels\"], \"pod, namespace\")",
    ]
  }

  trace_statements {
    context    = "resource"
    statements = [
      "set(attributes[\"k8s.cluster.name\"], \"{{ .Values.k8s.cluster.name }}\")",
    ]
  }

  output {
    logs   = [otelcol.processor.batch.default.input]
    traces = [otelcol.exporter.loadbalancing.default.input]
  }
}

{{ end }}

{{- define "statefulset.processor.transform.use_grafana_metric_names" -}}
otelcol.processor.transform "use_grafana_metric_names" {
  // https://grafana.com/docs/agent/latest/flow/reference/components/otelcol.processor.transform/
  error_mode = "ignore"

  metric_statements {
    context    = "metric"
    statements = [
      "set(name, \"traces.spanmetrics.latency\") where name == \"traces.spanmetrics.duration\"",
      "set(name, \"traces.spanmetrics.calls.total\") where name == \"traces.spanmetrics.calls\"",
    ]
  }

  output {
    metrics = [otelcol.processor.filter.drop_unneeded_span_metrics.input]
  }
}

{{ end }}
